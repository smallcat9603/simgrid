************************************************
* Installation information specific to SimGrid *
************************************************

The main source of information on how to compile SimGrid is the project
documentation available in doc/install.html or online on our website
http://simgrid.gforge.inria.fr/ . This INSTALL file contains mainly generic
information on how to compile SimGrid or any project using cmake.

Quick way to compile
====================

In short, the way to compile SimGrid depends on whether you are compiling a
tar.gz archive or directly from the Git.

(1) configure SimGrid (both in Git and archives)
$ cmake <all options> ./

Main options are:
  -DCMAKE_INSTALL_PREFIX=<path>: specify where to install SimGrid
  -Denable_maintainer_mode=on/off: get the maintainer files regenerated
                                   automatically
  -Denable_compile_optimizations=on/off: compile or not with optimizations
  -Denable_java=on/off: enable or not the Java bindings
  -Denable_scala=on/off: enable or not the Scala bindings
  -Denable_lua=on/off: enable or not the lua bindings
  -Denable_smpi=on/off: enable or not smpi
  -Denable_model-checking=on/off: enable or not the model-checker
See below for other configure options which are common to any project,
not only SimGrid related.

(2) Compile it
$ make

(3) Test it (optional)
$ make check
$ ctest

(4) Install it
$ make install


Dependencies
============
SimGrid archives do not have any firm dependencies.

If you want to compile, you must have installed perl and cmake version 2.6 or
above.

If you want to compile the java bindings, you have to have a java compiler, and
the jni.h header file (available from the JDK).

If you want to compile the lua bindings, you have to have lua5.1 executable and
liblua5.1-dev.

If you want to compile smpi, you should install a fortran compiler to use
 Fortran code. Only gfortran has been tested for now.

If you want to compile the GTNetS backend, you have to have a patched version of
GTNetS installed. The patch lives in the contrib section of the Git.
