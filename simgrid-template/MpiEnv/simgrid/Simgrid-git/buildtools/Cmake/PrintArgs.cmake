if(enable_print_message)
  message("")
  message("______________________________________________________________________")
  message("______________________________________________________________________ DEBUG")
  message("CMAKE_HOME_DIRECTORY ........: ${CMAKE_HOME_DIRECTORY}")
  message("")
  message("SIZEOF_MAX ..................: ${SIZEOF_MAX}")
  message("PTH_STACKGROWTH .............: ${PTH_STACKGROWTH}")
  message("need_asprintf ...............: ${simgrid_need_asprintf}")
  message("need_vasprintf ..............: ${simgrid_need_vasprintf}")
  message("PREFER_PORTABLE_SNPRINTF ....: ${PREFER_PORTABLE_SNPRINTF}")
  message("HAVE_VA_COPY ................: ${HAVE_VA_COPY}")
  message("PRINTF_NULL_WORKING .........: ${PRINTF_NULL_WORKING}")
  message("")
  message("\#define pth_skaddr_makecontext(skaddr,sksize) (${makecontext_addr})")
  message("\#define pth_sksize_makecontext(skaddr,sksize) (${makecontext_size})")
  message("\#define __VA_COPY_USE          ${__VA_COPY_USE}")
  message("mcsc ........................: ${mcsc}")
  message("")
  message("HAVE_PTHREAD_CREATE .........: ${pthread}")
  message("HAVE_SEM_INIT ...............: ${HAVE_SEM_INIT_LIB}")
  message("HAVE_SEM_TIMEDWAIT ..........: ${HAVE_SEM_TIMEDWAIT_LIB}")
  message("HAVE_MUTEX_TIMEDLOCK ........: ${HAVE_MUTEX_TIMEDLOCK_LIB}")
  message("HAVE_POSIX_GETTIME ..........: ${HAVE_POSIX_GETTIME}")
  message("")
  message("TIME_WITH_SYS_TIME ..........: ${TIME_WITH_SYS_TIME}")
  message("STDC_HEADERS ................: ${STDC_HEADERS}")
  message("HAVE_PTHREAD_H ..............: ${HAVE_PTHREAD_H}")
  message("HAVE_VALGRIND_VALGRIND_H ....: ${HAVE_VALGRIND_VALGRIND_H}")
  message("HAVE_SOCKET_H ...............: ${HAVE_SOCKET_H}")
  message("HAVE_SYS_SOCKET_H ...........: ${HAVE_SYS_SOCKET_H}")
  message("HAVE_STAT_H .................: ${HAVE_STAT_H}")
  message("HAVE_SYS_STAT_H .............: ${HAVE_SYS_STAT_H}")
  message("HAVE_WINDOWS_H ..............: ${HAVE_WINDOWS_H}")
  message("HAVE_WINSOCK_H ..............: ${HAVE_WINSOCK_H}")
  message("HAVE_WINSOCK2_H .............: ${HAVE_WINSOCK2_H}")
  message("HAVE_ERRNO_H ................: ${HAVE_ERRNO_H}")
  message("HAVE_UNISTD_H ...............: ${HAVE_UNISTD_H}")
  message("HAVE_EXECINFO_H .............: ${HAVE_EXECINFO_H}")
  message("HAVE_SIGNAL_H ...............: ${HAVE_SIGNAL_H}")
  message("HAVE_SYS_TIME_H .............: ${HAVE_SYS_TIME_H}")
  message("HAVE_TIME_H .................: ${HAVE_TIME_H}")
  message("HAVE_DLFCN_H ................: ${HAVE_DLFCN_H}")
  message("HAVE_INTTYPES_H .............: ${HAVE_INTTYPES_H}")
  message("HAVE_MEMORY_H ...............: ${HAVE_MEMORY_H}")
  message("HAVE_STDLIB_H ...............: ${HAVE_STDLIB_H}")
  message("HAVE_STRINGS_H ..............: ${HAVE_STRINGS_H}")
  message("HAVE_STRING_H ...............: ${HAVE_STRING_H}")
  message("HAVE_STDIO_H ................: ${HAVE_STDIO_H}")

  message("")
  message("HAVE_GETTIMEOFDAY ...........: ${HAVE_GETTIMEOFDAY}")
  message("HAVE_NANOSLEEP ..............: ${HAVE_NANOSLEEP}")
  message("HAVE_GETDTABLESIZE ..........: ${HAVE_GETDTABLESIZE}")
  message("HAVE_SYSCONF ................: ${HAVE_SYSCONF}")
  message("HAVE_READV ..................: ${HAVE_READV}")
  message("HAVE_POPEN ..................: ${HAVE_POPEN}")
  message("HAVE_SIGNAL .................: ${HAVE_SIGNAL}")
  message("HAVE_MAKECONTEXT ............: ${HAVE_MAKECONTEXT}")
  message("HAVE_SNPRINTF ...............: ${HAVE_SNPRINTF}")
  message("HAVE_VSNPRINTF ..............: ${HAVE_VSNPRINTF}")
  message("HAVE_ASPRINTF ...............: ${HAVE_ASPRINTF}")
  message("HAVE_VASPRINTF ..............: ${HAVE_VASPRINTF}")
  message("HAVE_MMAP ...................: ${HAVE_MMAP}")
  message("HAVE_THREAD_LOCAL_STORAGE ...: ${HAVE_THREAD_LOCAL_STORAGE}")
  message("HAVE_MMALLOC ................: ${HAVE_MMALLOC}")
  message("")
  message("CONTEXT_THREADS .............: ${CONTEXT_THREADS}")
  message("CONTEXT_UCONTEXT ............: ${CONTEXT_UCONTEXT}")
  message("______________________________________________________________________")
  message("______________________________________________________________________ DEBUG END")
  message("")
endif()

message("\nConfiguration of package `simgrid':")
message("        BUILDNAME ...........: ${BUILDNAME}")
message("        SITE ................: ${SITE}")
if(release)
  message("        Release .............: simgrid-${release_version}${SIMGRID_VERSION_EXTRA} (release build)")
else()
  message("        Release .............: simgrid-${release_version}${SIMGRID_VERSION_EXTRA} (development build)")
endif()
message("")
message("        Compiler: C .........: ${CMAKE_C_COMPILER} (${CMAKE_C_COMPILER_ID})")
message("                version .....: ${COMPILER_C_VERSION}")
if(CMAKE_CXX_COMPILER)
  message("        Compiler: C++ .......: ${CMAKE_CXX_COMPILER} (${CMAKE_CXX_COMPILER_ID})")
  message("                version .....: ${COMPILER_CXX_VERSION}")
endif()
if(CMAKE_Java_COMPILER)
  message("        Compiler: Java ......: ${CMAKE_Java_COMPILER} (${CMAKE_Java_COMPILER_ID})")
  message("                version .....: ${COMPILER_Java_VERSION}")
endif()
if(CMAKE_Fortran_COMPILER)
  message("        Compiler: Fortran ...: ${CMAKE_Fortran_COMPILER} (${CMAKE_Fortran_COMPILER_ID})")
  message("                version .....: ${COMPILER_Fortran_VERSION}")
endif()
message("        Linker: .............: ${CMAKE_LINKER}")
message("")
message("        CFlags ..............: ${CMAKE_C_FLAGS}")
message("        CXXFlags ............: ${CMAKE_CXX_FLAGS}")
message("        LDFlags .............: ${CMAKE_C_LINK_FLAGS}")
message("")
if(NOT APPLE AND NOT WIN32)
  message("        Compile Gtnets ......: ${HAVE_GTNETS}")
  message("        Compile NS-3 ........: ${HAVE_NS3}")
  message("        Gtnets path .........: ${gtnets_path}")
  message("        NS-3 path ...........: ${ns3_path}")
endif()
message("        Compile Java ........: ${HAVE_Java}")
message("        Compile Scala........: ${HAVE_Scala}")
message("        Compile Lua .........: ${HAVE_LUA}")
message("        Compile Smpi ........: ${HAVE_SMPI}")
message("        Compile MPI testsuite: ${enable_smpi_MPICH3_testsuite}")
message("        Compile Smpi f77 ....: ${SMPI_FORTRAN}")
message("        Compile Smpi f90 ....: ${SMPI_FORTRAN}")
message("        Compile Static ......: ${enable_lib_static}")
if(enable_java)
  message("        Native lib in jar ...: ${enable_lib_in_jar}")
endif()
message("")
message("        Maintainer mode .....: ${enable_maintainer_mode}")
message("        Documentation........: ${enable_documentation}")
message("        Model checking ......: ${HAVE_MC}")
message("        Tracing mode ........: ${enable_tracing}")
message("        Jedule  mode ........: ${enable_jedule}")
message("        Latency bound .......: ${enable_latency_bound_tracking}")
message("        Graphviz mode .......: ${HAVE_GRAPHVIZ}")
message("        Sigc++ mode .........: ${HAVE_LIBSIGC++}")
message("        Mallocators .........: ${enable_mallocators}")
message("")
message("        Simgrid dependencies : ${SIMGRID_DEP}")
message("")
message("        INSTALL_PREFIX ......: ${CMAKE_INSTALL_PREFIX}")

exec_program("${CMAKE_COMMAND} -E make_directory ${PROJECT_BINARY_DIR}/Testing/Notes/" OUTPUT_VARIABLE OKIDOKI)
file(WRITE ${PROJECT_BINARY_DIR}/Testing/Notes/Build  "GIT version : ${GIT_VERSION}\n")
file(APPEND ${PROJECT_BINARY_DIR}/Testing/Notes/Build "Release     : simgrid-${release_version}\n")
file(APPEND ${PROJECT_BINARY_DIR}/Testing/Notes/Build "Pipol user  : $ENV{PIPOL_USER}\n")
file(APPEND ${PROJECT_BINARY_DIR}/Testing/Notes/Build "Pipol image : $ENV{PIPOL_IMAGE}\n")
