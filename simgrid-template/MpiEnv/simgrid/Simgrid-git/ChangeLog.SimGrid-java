ChangeLog for SimGrid-java, before its integration into the main source tree.

SimGrid-java (3.9) stable; urgency=low

 -- 2013-01-30 Da SimGrid team <simgrid-devel@lists.gforge.inria.fr>

SimGrid-java (3.8.1) stable; urgency=low

 * New module: org.simgrid.trace.Trace (SimGrid trace bindings)
   Warning: all methods are visible, but only some of them are
   implemented so far. Check the source (src/jtrace.c)
   for further information.
 * New module: org.simgrid.msg.File (SimGrid File management functions)
 * New Module: org.simgrid.msg.VM (SimGrid interface to mimick IAAS clouds)
 * Change the meaning of Process.restart: now restart the process from
   the begining, like MSG_process_restart in C.
 * Add Process.setAutoRestart: handling of process restart when failed
   host comes back.
 * Add Process.getProperty, Host.getProperty, Host.getProperty: allows
   you to retrieve the properties of the processes/hosts
 * Deprecate Msg.clean(): you can just forget about it now.
 * New function Process.getCount(), that only works when compiling
   with the not yet released version 3.9 of the C library.

 * New context factory based on Coroutines. It mandates a modified JVM
   but then, the simulations run about five times faster, and there is
   no limit to the amount of processes (beside of the available memory).

 -- 2012-12-04 Da SimGrid team <simgrid-devel@lists.gforge.inria.fr>

SimGrid-java (3.7.1) stable; urgency=low

 The "Java aint got to be bloated and slow" release

 Major cleanups:
 * Various internal cleanups and performance improvement
   Simulations are expected to run up to twice faster or so
 * Make Process.kill(process) an instance method, not a static one
 * User processes are not java.lang.Thread subclasses.
   This breaks the compatibility (sorry), but previous API was
   brain-dead, making it impossible to have non-trivial
   initializations in the process constructor.
 * Require a full constructor per Process sub-class.
   Kinda breaks the compatibility (sorry), but this allows a much more
   efficient way to launch the processes at simulation startup.
 * Do not embeed our version of semaphores, java 1.5 can be considered
   as sufficiently prevalent for us to not dupplicate its features.
 * Lot of bug fixes

 Extend the API:
 * Add examples for almost every part of the API
   We spotted and fixed a lot of bugs in the process

 * New module: asynchronous communication API
 * New function: Process.sleep()
   It takes milliseconds as argument, just as java.lang.Thread.sleep()
 * New module: org.simgrid.msg.Mutex (SimGrid mutexes)
 * New module: org.simgrid.msg.RngStream (RngStreams random generators)

 -- 2012-06-12 Da SimGrid team <simgrid-devel@lists.gforge.inria.fr>

SimGrid-java (1.0 (3.6) unstable; urgency=low

 * Initial release.
 * Split of every thing from simgrid v3.5 into a separate package.

 -- 2011-10-05 Da SimGrid team <simgrid-devel@lists.gforge.inria.fr>
