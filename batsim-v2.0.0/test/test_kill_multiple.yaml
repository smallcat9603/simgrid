base_output_directory: /tmp/batsim_tests/kill_multiple
base_variables:
  batsim_dir: ${base_working_directory}
implicit_instances:
  implicit:
    sweep:
      platform :
        - {"name":"small", "filename":"${batsim_dir}/platforms/small_platform.xml", "master_host":"master_host"}
      workload :
        - {"name":"tiny", "filename": "${batsim_dir}/workload_profiles/one_delay_job.json"}
      algo:
        - {"name":"killer", "sched_name":"killer"}
      delay_before_kill: [0,5,10,15]
      nb_kills_per_job: [1,2]
    generic_instance:
      timeout: 10
      working_directory: ${base_working_directory}
      output_directory: ${base_output_directory}/results/${instance_id}
      batsim_command: ${BATSIM_BIN:=batsim} -p ${platform[filename]} -w ${workload[filename]} -e ${output_directory}/out -m ${platform[master_host]}
      sched_command: ${BATSCHED_BIN:=batsched} -v ${algo[sched_name]} --variant_options_filepath ${output_directory}/sched_input.json
      commands_before_execution:
        # Generate sched input
        - |
              #!/usr/bin/env bash
              cat > ${output_directory}/sched_input.json << EOF
              {
                "nb_kills_per_job": ${nb_kills_per_job},
                "delay_before_kill": ${delay_before_kill}
              }
              EOF
commands_before_instances:
  - ${batsim_dir}/test/is_batsim_dir.py ${base_working_directory}
  - ${batsim_dir}/test/clean_output_dir.py ${base_output_directory}
