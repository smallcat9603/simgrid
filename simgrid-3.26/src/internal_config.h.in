/* internal_config.h -- characteristics of the platform, as probed by Cmake */

/* Warning: The file internal_config.h is AUTOMATICALLY GENERATED by Cmake.
 * Edit the template instead: src/internal_config.h.in                      */

/* Copyright (c) 2004-2020. The SimGrid Team. All rights reserved.          */

/* This program is free software; you can redistribute it and/or modify it
 * under the terms of the license (GNU LGPL) which comes with this package. */

#include "simgrid/config.h"       /* what was compiled in? */

/* Non-standard header files */
/* <linux/futex.h> */
#cmakedefine01 HAVE_FUTEX_H
/* <signal.h> */
#cmakedefine01 HAVE_SIGNAL_H
/* <unistd.h> */
#cmakedefine01 HAVE_UNISTD_H
/* <ucontext.h> */
#cmakedefine01 HAVE_UCONTEXT_H
/* <valgrind/valgrind.h> */
#cmakedefine01 HAVE_VALGRIND_H

/* Address Sanitizer */
#cmakedefine01 HAVE_SANITIZER_THREAD
#cmakedefine01 HAVE_SANITIZER_THREAD_FIBER_SUPPORT
#cmakedefine01 HAVE_SANITIZER_ADDRESS
#cmakedefine01 HAVE_SANITIZER_ADDRESS_FIBER_SUPPORT

/* Time portability */
/* Function gettimeofday */
#cmakedefine01 HAVE_GETTIMEOFDAY
/* Function clock_gettime */
#cmakedefine01 HAVE_POSIX_GETTIME
/* Function nanosleep */
#cmakedefine01 HAVE_NANOSLEEP

/* The usable context factories */
#cmakedefine01 HAVE_BOOST_CONTEXTS
#cmakedefine01 HAVE_RAW_CONTEXTS
#cmakedefine01 HAVE_UCONTEXT_CONTEXTS

/* Variables for the thread contexts (and parallel mode of raw contexts) */
/* pthread_setaffinity_np() is Linux and FreeBSD but not on Mac nor Windows */
#cmakedefine01 HAVE_PTHREAD_SETAFFINITY
/* pthread_setaffinity_np() defined in pthread_np.h on FreeBSD but not Linux */
#cmakedefine01 HAVE_PTHREAD_NP_H

/* Variables for the raw contexts (to select the right assembly code) */
#cmakedefine01 SIMGRID_PROCESSOR_i686
#cmakedefine01 SIMGRID_PROCESSOR_x86_64

/* Variables for the SysV contexts */
@sg_makecontext_stack_addr@
@sg_makecontext_stack_size@

/* Variable for SysV, raw and Boost contexts */
/* Does the stack growth upward, or downward? */
#define PTH_STACKGROWTH @PTH_STACKGROWTH@

/* MC variables */
/* getdtablesize: get descriptor table size */
#cmakedefine01 HAVE_GETDTABLESIZE
/* Did we compile mmalloc in? */
#cmakedefine01 HAVE_MMALLOC
/* process_vm_readv: transfer data between process address spaces */
#cmakedefine01 HAVE_PROCESS_VM_READV

/* SMPI variables */
/* SMPI enabled */
#cmakedefine01 HAVE_SMPI
/* Fortran language is available for SMPI, and which one */
#cmakedefine01 SMPI_FORTRAN
#cmakedefine01 SMPI_GFORTRAN
#cmakedefine01 SMPI_FLANG
#cmakedefine01 SMPI_IFORT
/* We have mmap and objdump to handle privatization */
#cmakedefine01 HAVE_PRIVATIZATION
/* We have PAPI to fine-grain trace execution time */
#cmakedefine01 HAVE_PAPI
/* We have sendfile to efficiently copy files for dl-open privatization */
#cmakedefine01 SG_HAVE_SENDFILE

/* Other function checks */
/* Function dlfunc */
#cmakedefine01 HAVE_DLFUNC
/* Function mmap */
#cmakedefine01 HAVE_MMAP
/* Function mremap */
#cmakedefine01 HAVE_MREMAP
/* Function sysconf */
#cmakedefine01 HAVE_SYSCONF
/* Function vasprintf */
#cmakedefine01 HAVE_VASPRINTF

/* Other checks */
/* The graphviz library */
#cmakedefine01 HAVE_GRAPHVIZ
/* The lib unwind library (for MC and backtrace display) */
#cmakedefine01 HAVE_LIBUNWIND
/* The boost_stacktrace_backtrace library */
#cmakedefine01 HAVE_BOOST_STACKTRACE_BACKTRACE /* preferred */
#cmakedefine01 HAVE_BOOST_STACKTRACE_ADDR2LINE /* fallback */
