This file lists the symbols ignored in the documentation.
It follows the RST syntax but is completely ignored by sphinx. 
It is only used by find-missing, that will not report any definition linked here as missing.

# These ones trigger a bug in autodoxy, that get confused with the const in the function parameter
# So I document them manually in the rst for now. Shame, weak.
.. autodoxyvar:: simgrid::s4u::Link::on_communicate
.. autodoxyvar:: simgrid::s4u::Actor::on_host_change
.. autodoxyvar:: simgrid::s4u::Exec::on_completion
.. autodoxyvar:: simgrid::s4u::Exec::on_start

# This is a bug in find-missing, as these symbols are actually documented
.. autodoxymethod:: simgrid::s4u::Host::route_to(const Host *dest, std::vector< Link * > &links, double *latency)
.. autodoxymethod:: simgrid::s4u::Host::route_to(const Host *dest, std::vector< kernel::resource::LinkImpl * > &links, double *latency)

# The fact that actors can return an int is a legacy behavior for MSG
.. autodoxymethod:: simgrid::s4u::Engine::register_default(const kernel::actor::ActorCodeFactory &factory)
.. autodoxymethod:: simgrid::s4u::Engine::register_default(int(*code)(int, char **))
.. autodoxymethod:: simgrid::s4u::Engine::register_function(const std::string &name, const kernel::actor::ActorCodeFactory &factory)
.. autodoxymethod:: simgrid::s4u::Engine::register_function(const std::string &name, int(*code)(int, char **))


# These could be hidden as private things, eg in s4u_Exec.cpp
.. autodoxymethod:: simgrid::s4u::ExecPar::get_remaining()
.. autodoxymethod:: simgrid::s4u::ExecPar::get_remaining_ratio()
.. autodoxymethod:: simgrid::s4u::ExecPar::start()
.. autodoxymethod:: simgrid::s4u::ExecSeq::get_remaining()
.. autodoxymethod:: simgrid::s4u::ExecSeq::get_remaining_ratio()
.. autodoxymethod:: simgrid::s4u::ExecSeq::set_host(Host *host)
.. autodoxymethod:: simgrid::s4u::ExecSeq::start()

# I don't plan to document MSG in the new way.
.. autodoxymethod:: ::MSG_barrier_destroy(const_sg_bar_t bar)
.. autodoxymethod:: ::MSG_barrier_init(unsigned int count)
.. autodoxymethod:: ::MSG_barrier_wait(msg_bar_t bar)
.. autodoxymethod:: ::MSG_comm_destroy(const_msg_comm_t comm)
.. autodoxymethod:: ::MSG_comm_get_status(const_msg_comm_t comm)
.. autodoxymethod:: ::MSG_comm_get_task(const_msg_comm_t comm)
.. autodoxymethod:: ::MSG_comm_test(msg_comm_t comm)
.. autodoxymethod:: ::MSG_comm_testany(const_xbt_dynar_t comms)
.. autodoxymethod:: ::MSG_comm_wait(msg_comm_t comm, double timeout)
.. autodoxymethod:: ::MSG_comm_waitall(msg_comm_t *comm, int nb_elem, double timeout)
.. autodoxymethod:: ::MSG_comm_waitany(const_xbt_dynar_t comms)
.. autodoxymethod:: ::MSG_config(const char *key, const char *value)
.. autodoxymethod:: ::MSG_create_environment(const char *file)
.. autodoxymethod:: ::MSG_function_register(const char *name, xbt_main_func_t code)
.. autodoxymethod:: ::MSG_function_register_default(xbt_main_func_t code)
.. autodoxymethod:: ::MSG_get_clock()
.. autodoxymethod:: ::MSG_get_host_by_name(const char *name)
.. autodoxymethod:: ::MSG_get_host_number()
.. autodoxymethod:: ::MSG_get_sent_msg()
.. autodoxymethod:: ::MSG_host_by_name(const char *name)
.. autodoxymethod:: ::MSG_host_get_attached_storage_lists(const_sg_host_t host)
.. autodoxymethod:: ::MSG_host_get_core_number(const_sg_host_t host)
.. autodoxymethod:: ::MSG_host_get_data(const_sg_host_t host)
.. autodoxymethod:: ::MSG_host_get_load(const_sg_host_t host)
.. autodoxymethod:: ::MSG_host_get_mounted_storage_list(sg_host_t host)
.. autodoxymethod:: ::MSG_host_get_name(const_sg_host_t host)
.. autodoxymethod:: ::MSG_host_get_nb_pstates(const_sg_host_t host)
.. autodoxymethod:: ::MSG_host_get_power_peak_at(const_sg_host_t host, int pstate_index)
.. autodoxymethod:: ::MSG_host_get_process_list(const_sg_host_t host, xbt_dynar_t whereto)
.. autodoxymethod:: ::MSG_host_get_properties(const_sg_host_t host)
.. autodoxymethod:: ::MSG_host_get_property_value(const_sg_host_t host, const char *name)
.. autodoxymethod:: ::MSG_host_get_pstate(const_sg_host_t host)
.. autodoxymethod:: ::MSG_host_get_speed(const_sg_host_t host)
.. autodoxymethod:: ::MSG_host_is_on(const_sg_host_t h)
.. autodoxymethod:: ::MSG_host_off(sg_host_t h)
.. autodoxymethod:: ::MSG_host_on(sg_host_t h)
.. autodoxymethod:: ::MSG_host_self()
.. autodoxymethod:: ::MSG_host_set_data(sg_host_t host, void *data)
.. autodoxymethod:: ::MSG_host_set_property_value(sg_host_t host, const char *name, const char *value)
.. autodoxymethod:: ::MSG_host_set_pstate(sg_host_t host, int pstate)
.. autodoxymethod:: ::MSG_hosts_as_dynar()
.. autodoxymethod:: ::MSG_init_nocheck(int *argc, char **argv)
.. autodoxymethod:: ::MSG_launch_application(const char *file)
.. autodoxymethod:: ::MSG_mailbox_set_async(const char *alias)
.. autodoxymethod:: ::MSG_main()
.. autodoxymethod:: ::MSG_parallel_task_create(const char *name, int host_nb, const msg_host_t *host_list, double *flops_amount, double *bytes_amount, void *data)
.. autodoxymethod:: ::MSG_parallel_task_execute(msg_task_t task)
.. autodoxymethod:: ::MSG_parallel_task_execute_with_timeout(msg_task_t task, double timeout)
.. autodoxymethod:: ::MSG_process_attach(const char *name, void *data, msg_host_t host, xbt_dict_t properties)
.. autodoxymethod:: ::MSG_process_auto_restart_set(msg_process_t process, int auto_restart)
.. autodoxymethod:: ::MSG_process_create(const char *name, xbt_main_func_t code, void *data, msg_host_t host)
.. autodoxymethod:: ::MSG_process_create_with_arguments(const char *name, xbt_main_func_t code, void *data, msg_host_t host, int argc, char **argv)
.. autodoxymethod:: ::MSG_process_create_with_environment(const char *name, xbt_main_func_t code, void *data, msg_host_t host, int argc, char **argv, xbt_dict_t properties)
.. autodoxymethod:: ::MSG_process_daemonize(msg_process_t process)
.. autodoxymethod:: ::MSG_process_detach()
.. autodoxymethod:: ::MSG_process_from_PID(int pid)
.. autodoxymethod:: ::MSG_process_get_PID(const_sg_actor_t process)
.. autodoxymethod:: ::MSG_process_get_PPID(const_sg_actor_t process)
.. autodoxymethod:: ::MSG_process_get_data(const_sg_actor_t process)
.. autodoxymethod:: ::MSG_process_get_host(const_sg_actor_t process)
.. autodoxymethod:: ::MSG_process_get_name(const_sg_actor_t process)
.. autodoxymethod:: ::MSG_process_get_number()
.. autodoxymethod:: ::MSG_process_get_properties(const_sg_actor_t process)
.. autodoxymethod:: ::MSG_process_get_property_value(const_sg_actor_t process, const char *name)
.. autodoxymethod:: ::MSG_process_is_suspended(msg_process_t process)
.. autodoxymethod:: ::MSG_process_join(msg_process_t process, double timeout)
.. autodoxymethod:: ::MSG_process_kill(msg_process_t process)
.. autodoxymethod:: ::MSG_process_killall()
.. autodoxymethod:: ::MSG_process_migrate(msg_process_t process, msg_host_t host)
.. autodoxymethod:: ::MSG_process_on_exit(int_f_int_pvoid_t fun, void *data)
.. autodoxymethod:: ::MSG_process_ref(const_sg_actor_t process)
.. autodoxymethod:: ::MSG_process_restart(msg_process_t process)
.. autodoxymethod:: ::MSG_process_resume(msg_process_t process)
.. autodoxymethod:: ::MSG_process_self()
.. autodoxymethod:: ::MSG_process_self_PID()
.. autodoxymethod:: ::MSG_process_self_PPID()
.. autodoxymethod:: ::MSG_process_self_name()
.. autodoxymethod:: ::MSG_process_set_data(msg_process_t process, void *data)
.. autodoxymethod:: ::MSG_process_set_data_cleanup(void_f_pvoid_t data_cleanup)
.. autodoxymethod:: ::MSG_process_set_kill_time(msg_process_t process, double kill_time)
.. autodoxymethod:: ::MSG_process_sleep(double nb_sec)
.. autodoxymethod:: ::MSG_process_suspend(msg_process_t process)
.. autodoxymethod:: ::MSG_process_unref(const_sg_actor_t process)
.. autodoxymethod:: ::MSG_process_yield()
.. autodoxymethod:: ::MSG_processes_as_dynar()
.. autodoxymethod:: ::MSG_sem_acquire(msg_sem_t sem)
.. autodoxymethod:: ::MSG_sem_acquire_timeout(msg_sem_t sem, double timeout)
.. autodoxymethod:: ::MSG_sem_destroy(const_sg_sem_t sem)
.. autodoxymethod:: ::MSG_sem_get_capacity(msg_sem_t sem)
.. autodoxymethod:: ::MSG_sem_init(int initial_value)
.. autodoxymethod:: ::MSG_sem_release(msg_sem_t sem)
.. autodoxymethod:: ::MSG_sem_would_block(msg_sem_t sem)
.. autodoxymethod:: ::MSG_storage_get_by_name(const char *name)
.. autodoxymethod:: ::MSG_storage_get_data(const_sg_storage_t storage)
.. autodoxymethod:: ::MSG_storage_get_host(const_sg_storage_t storage)
.. autodoxymethod:: ::MSG_storage_get_name(const_sg_storage_t storage)
.. autodoxymethod:: ::MSG_storage_get_properties(const_sg_storage_t storage)
.. autodoxymethod:: ::MSG_storage_get_property_value(const_sg_storage_t storage, const char *name)
.. autodoxymethod:: ::MSG_storage_read(msg_storage_t storage, sg_size_t size)
.. autodoxymethod:: ::MSG_storage_set_data(msg_storage_t storage, void *data)
.. autodoxymethod:: ::MSG_storage_set_property_value(msg_storage_t storage, const char *name, const char *value)
.. autodoxymethod:: ::MSG_storage_write(msg_storage_t storage, sg_size_t size)
.. autodoxymethod:: ::MSG_storages_as_dynar()
.. autodoxymethod:: ::MSG_task_cancel(msg_task_t task)
.. autodoxymethod:: ::MSG_task_create(const char *name, double flops_amount, double bytes_amount, void *data)
.. autodoxymethod:: ::MSG_task_destroy(msg_task_t task)
.. autodoxymethod:: ::MSG_task_dsend(msg_task_t task, const char *alias, void_f_pvoid_t cleanup)
.. autodoxymethod:: ::MSG_task_dsend_bounded(msg_task_t task, const char *alias, void_f_pvoid_t cleanup, double maxrate)
.. autodoxymethod:: ::MSG_task_execute(msg_task_t task)
.. autodoxymethod:: ::MSG_task_get_bytes_amount(const_msg_task_t task)
.. autodoxymethod:: ::MSG_task_get_category(const_msg_task_t task)
.. autodoxymethod:: ::MSG_task_get_data(const_msg_task_t task)
.. autodoxymethod:: ::MSG_task_get_flops_amount(const_msg_task_t task)
.. autodoxymethod:: ::MSG_task_get_name(const_msg_task_t task)
.. autodoxymethod:: ::MSG_task_get_remaining_communication(const_msg_task_t task)
.. autodoxymethod:: ::MSG_task_get_remaining_work_ratio(const_msg_task_t task)
.. autodoxymethod:: ::MSG_task_get_sender(const_msg_task_t task)
.. autodoxymethod:: ::MSG_task_get_source(const_msg_task_t task)
.. autodoxymethod:: ::MSG_task_irecv(msg_task_t *task, const char *alias)
.. autodoxymethod:: ::MSG_task_irecv_bounded(msg_task_t *task, const char *alias, double rate)
.. autodoxymethod:: ::MSG_task_isend(msg_task_t task, const char *alias)
.. autodoxymethod:: ::MSG_task_isend_bounded(msg_task_t task, const char *alias, double maxrate)
.. autodoxymethod:: ::MSG_task_listen(const char *alias)
.. autodoxymethod:: ::MSG_task_listen_from(const char *alias)
.. autodoxymethod:: ::MSG_task_receive(msg_task_t *task, const char *alias)
.. autodoxymethod:: ::MSG_task_receive_bounded(msg_task_t *task, const char *alias, double rate)
.. autodoxymethod:: ::MSG_task_receive_with_timeout(msg_task_t *task, const char *alias, double timeout)
.. autodoxymethod:: ::MSG_task_receive_with_timeout_bounded(msg_task_t *task, const char *alias, double timeout, double rate)
.. autodoxymethod:: ::MSG_task_send(msg_task_t task, const char *alias)
.. autodoxymethod:: ::MSG_task_send_bounded(msg_task_t task, const char *alias, double rate)
.. autodoxymethod:: ::MSG_task_send_with_timeout(msg_task_t task, const char *alias, double timeout)
.. autodoxymethod:: ::MSG_task_send_with_timeout_bounded(msg_task_t task, const char *alias, double timeout, double maxrate)
.. autodoxymethod:: ::MSG_task_set_bound(msg_task_t task, double bound)
.. autodoxymethod:: ::MSG_task_set_bytes_amount(msg_task_t task, double bytes_amount)
.. autodoxymethod:: ::MSG_task_set_category(msg_task_t task, const char *category)
.. autodoxymethod:: ::MSG_task_set_data(msg_task_t task, void *data)
.. autodoxymethod:: ::MSG_task_set_flops_amount(msg_task_t task, double flops_amount)
.. autodoxymethod:: ::MSG_task_set_name(msg_task_t task, const char *name)
.. autodoxymethod:: ::MSG_task_set_priority(msg_task_t task, double priority)
.. autodoxymethod:: ::MSG_vm_create_core(msg_host_t pm, const char *name)
.. autodoxymethod:: ::MSG_vm_create_multicore(msg_host_t pm, const char *name, int coreAmount)
.. autodoxymethod:: ::MSG_vm_destroy(msg_vm_t vm)
.. autodoxymethod:: ::MSG_vm_get_name(const_sg_vm_t vm)
.. autodoxymethod:: ::MSG_vm_get_pm(const_sg_vm_t vm)
.. autodoxymethod:: ::MSG_vm_get_ramsize(const_sg_vm_t vm)
.. autodoxymethod:: ::MSG_vm_is_created(msg_vm_t vm)
.. autodoxymethod:: ::MSG_vm_is_running(msg_vm_t vm)
.. autodoxymethod:: ::MSG_vm_is_suspended(msg_vm_t vm)
.. autodoxymethod:: ::MSG_vm_resume(msg_vm_t vm)
.. autodoxymethod:: ::MSG_vm_set_bound(msg_vm_t vm, double bound)
.. autodoxymethod:: ::MSG_vm_set_ramsize(msg_vm_t vm, size_t size)
.. autodoxymethod:: ::MSG_vm_shutdown(msg_vm_t vm)
.. autodoxymethod:: ::MSG_vm_start(msg_vm_t vm)
.. autodoxymethod:: ::MSG_vm_suspend(msg_vm_t vm)
.. autodoxymethod:: ::MSG_zone_get_by_name(const char *name)
.. autodoxymethod:: ::MSG_zone_get_hosts(const_sg_netzone_t zone, xbt_dynar_t whereto)
.. autodoxymethod:: ::MSG_zone_get_name(const_sg_netzone_t zone)
.. autodoxymethod:: ::MSG_zone_get_property_value(const_sg_netzone_t zone, const char *name)
.. autodoxymethod:: ::MSG_zone_get_root()
.. autodoxymethod:: ::MSG_zone_get_sons(const_sg_netzone_t zone, xbt_dict_t whereto)
.. autodoxymethod:: ::MSG_zone_set_property_value(msg_netzone_t zone, const char *name, const char *value)
member ::MIN is of kind define
member ::MAX is of kind define
member ::MSG_TASK_UNINITIALIZED is of kind define
member ::MSG_init is of kind define
member ::MSG_task_recv is of kind define
member ::MSG_task_recv_bounded is of kind define
member ::msg_error_t is of kind enum

# Storage must die
.. autodoxymethod:: sg_host_get_attached_storage_list(const_sg_host_t host)
.. autodoxymethod:: sg_host_get_mounted_storage_list(sg_host_t host)
.. autodoxymethod:: simgrid::s4u::Host::get_attached_storages()
.. autodoxymethod:: simgrid::s4u::Host::get_mounted_storages()

# These should not be public
.. autodoxymethod:: simgrid::s4u::Link::get_impl()
.. autodoxymethod:: simgrid::s4u::NetZone::get_impl()
.. autodoxymethod:: simgrid::s4u::VirtualMachine::get_impl()
.. autodoxymethod:: simgrid::s4u::Activity::get_impl()
.. autodoxymethod:: simgrid::s4u::Comm::~Comm()
.. autodoxymethod:: simgrid::s4u::Exec::~Exec()
.. autodoxymethod:: simgrid::s4u::ExecPar::~ExecPar()
.. autodoxymethod:: simgrid::s4u::ExecSeq::~ExecSeq()
.. autodoxymethod:: simgrid::s4u::Io::~Io()

# These ones are a bug of Doxygen, that parse them as variables instead of types.
# So we don't use this bogus parse result, but go directly for cpp:type directives in app_s4u.rst
.. autodoxyvar:: ::const_sg_actor_t
.. autodoxyvar:: ::const_sg_bar_t
.. autodoxyvar:: ::const_sg_mutex_t
.. autodoxyvar:: ::const_sg_sem_t
.. autodoxyvar:: ::const_sg_host_t
.. autodoxyvar:: ::const_sg_storage_t
.. autodoxyvar:: ::const_msg_comm_t
.. autodoxyvar:: ::const_msg_task_t
.. autodoxyvar:: ::const_sg_cond_t
.. autodoxyvar:: ::const_sg_disk_t
.. autodoxyvar:: ::const_sg_file_t
.. autodoxyvar:: ::const_sg_link_t
.. autodoxyvar:: ::const_sg_netzone_t
.. autodoxyvar:: ::const_sg_vm_t
