#!/usr/bin/env tesh

p Testing a bypass ASroute

$ ${bindir:=.}/basic-parsing-test ${srcdir:=.}/examples/platforms/bypassZoneRoute.xml FULL_LINK
> [0.000000] [xbt_cfg/INFO] Switching to the L07 model to handle parallel tasks.
> Workstation number: 3, link number: 11
> Route between 1 and 1
>   Route size 2
>   Link my_cluster_1_link_1_UP: latency = 0.000050, bandwidth = 125000000.000000
>   Link my_cluster_1_link_1_DOWN: latency = 0.000050, bandwidth = 125000000.000000
>   Route latency = 0.000100, route bandwidth = 125000000.000000
> Route between 1 and 2
>   Route size 3
>   Link my_cluster_1_link_1_UP: latency = 0.000050, bandwidth = 125000000.000000
>   Link link_tmp: latency = 0.000500, bandwidth = 1250000000.000000
>   Link my_cluster_2_link_2_DOWN: latency = 0.000050, bandwidth = 125000000.000000
>   Route latency = 0.000600, route bandwidth = 125000000.000000
> Route between 1 and 3
>   Route size 4
>   Link my_cluster_1_link_1_UP: latency = 0.000050, bandwidth = 125000000.000000
>   Link link1: latency = 0.000500, bandwidth = 1250000000.000000
>   Link link3: latency = 0.000500, bandwidth = 1250000000.000000
>   Link my_cluster_3_link_3_DOWN: latency = 0.000050, bandwidth = 125000000.000000
>   Route latency = 0.001100, route bandwidth = 125000000.000000
> Route between 2 and 1
>   Route size 4
>   Link my_cluster_2_link_2_UP: latency = 0.000050, bandwidth = 125000000.000000
>   Link link2: latency = 0.000500, bandwidth = 1250000000.000000
>   Link link1: latency = 0.000500, bandwidth = 1250000000.000000
>   Link my_cluster_1_link_1_DOWN: latency = 0.000050, bandwidth = 125000000.000000
>   Route latency = 0.001100, route bandwidth = 125000000.000000
> Route between 2 and 2
>   Route size 2
>   Link my_cluster_2_link_2_UP: latency = 0.000050, bandwidth = 125000000.000000
>   Link my_cluster_2_link_2_DOWN: latency = 0.000050, bandwidth = 125000000.000000
>   Route latency = 0.000100, route bandwidth = 125000000.000000
> Route between 2 and 3
>   Route size 4
>   Link my_cluster_2_link_2_UP: latency = 0.000050, bandwidth = 125000000.000000
>   Link link2: latency = 0.000500, bandwidth = 1250000000.000000
>   Link link3: latency = 0.000500, bandwidth = 1250000000.000000
>   Link my_cluster_3_link_3_DOWN: latency = 0.000050, bandwidth = 125000000.000000
>   Route latency = 0.001100, route bandwidth = 125000000.000000
> Route between 3 and 1
>   Route size 4
>   Link my_cluster_3_link_3_UP: latency = 0.000050, bandwidth = 125000000.000000
>   Link link3: latency = 0.000500, bandwidth = 1250000000.000000
>   Link link1: latency = 0.000500, bandwidth = 1250000000.000000
>   Link my_cluster_1_link_1_DOWN: latency = 0.000050, bandwidth = 125000000.000000
>   Route latency = 0.001100, route bandwidth = 125000000.000000
> Route between 3 and 2
>   Route size 4
>   Link my_cluster_3_link_3_UP: latency = 0.000050, bandwidth = 125000000.000000
>   Link link3: latency = 0.000500, bandwidth = 1250000000.000000
>   Link link2: latency = 0.000500, bandwidth = 1250000000.000000
>   Link my_cluster_2_link_2_DOWN: latency = 0.000050, bandwidth = 125000000.000000
>   Route latency = 0.001100, route bandwidth = 125000000.000000
> Route between 3 and 3
>   Route size 2
>   Link my_cluster_3_link_3_UP: latency = 0.000050, bandwidth = 125000000.000000
>   Link my_cluster_3_link_3_DOWN: latency = 0.000050, bandwidth = 125000000.000000
>   Route latency = 0.000100, route bandwidth = 125000000.000000

p Testing a bypass route
! output sort
$ ${bindir:=.}/basic-parsing-test ${srcdir:=.}/examples/platforms/bypassRoute.xml FULL_LINK
> [0.000000] [xbt_cfg/INFO] Switching to the L07 model to handle parallel tasks.
> Workstation number: 4, link number: 10
> Route between AS_2_host1 and AS_2_host1
>   Route size 1
>   Link __loopback__: latency = 0.000000, bandwidth = 10000000000.000000
>   Route latency = 0.000000, route bandwidth = 10000000000.000000
> Route between AS_2_host1 and AS_2_host2
>   Route size 3
>   Link AS_2_link7: latency = 0.000500, bandwidth = 1250000000.000000
>   Link AS_2_link6: latency = 0.000500, bandwidth = 1250000000.000000
>   Link AS_2_link5: latency = 0.000500, bandwidth = 1250000000.000000
>   Route latency = 0.001500, route bandwidth = 1250000000.000000
> Route between AS_2_host1 and AS_2_host3
>   Route size 2
>   Link AS_2_link1: latency = 0.000500, bandwidth = 1250000000.000000
>   Link AS_2_link3: latency = 0.000500, bandwidth = 1250000000.000000
>   Route latency = 0.001000, route bandwidth = 1250000000.000000
> Route between AS_2_host1 and AS_1_host1
>   Route size 4
>   Link AS_2_link1: latency = 0.000500, bandwidth = 1250000000.000000
>   Link AS_2_link4: latency = 0.000500, bandwidth = 1250000000.000000
>   Link backbone: latency = 0.000500, bandwidth = 1250000000.000000
>   Link AS_1_link: latency = 0.000500, bandwidth = 1250000000.000000
>   Route latency = 0.002000, route bandwidth = 1250000000.000000
> Route between AS_2_host2 and AS_2_host1
>   Route size 2
>   Link AS_2_link2: latency = 0.000500, bandwidth = 1250000000.000000
>   Link AS_2_link1: latency = 0.000500, bandwidth = 1250000000.000000
>   Route latency = 0.001000, route bandwidth = 1250000000.000000
> Route between AS_2_host2 and AS_2_host2
>   Route size 1
>   Link __loopback__: latency = 0.000000, bandwidth = 10000000000.000000
>   Route latency = 0.000000, route bandwidth = 10000000000.000000
> Route between AS_2_host2 and AS_2_host3
>   Route size 2
>   Link AS_2_link2: latency = 0.000500, bandwidth = 1250000000.000000
>   Link AS_2_link3: latency = 0.000500, bandwidth = 1250000000.000000
>   Route latency = 0.001000, route bandwidth = 1250000000.000000
> Route between AS_2_host2 and AS_1_host1
>   Route size 4
>   Link AS_2_link2: latency = 0.000500, bandwidth = 1250000000.000000
>   Link AS_2_link4: latency = 0.000500, bandwidth = 1250000000.000000
>   Link backbone: latency = 0.000500, bandwidth = 1250000000.000000
>   Link AS_1_link: latency = 0.000500, bandwidth = 1250000000.000000
>   Route latency = 0.002000, route bandwidth = 1250000000.000000
> Route between AS_2_host3 and AS_2_host1
>   Route size 2
>   Link AS_2_link3: latency = 0.000500, bandwidth = 1250000000.000000
>   Link AS_2_link1: latency = 0.000500, bandwidth = 1250000000.000000
>   Route latency = 0.001000, route bandwidth = 1250000000.000000
> Route between AS_2_host3 and AS_2_host2
>   Route size 2
>   Link AS_2_link3: latency = 0.000500, bandwidth = 1250000000.000000
>   Link AS_2_link2: latency = 0.000500, bandwidth = 1250000000.000000
>   Route latency = 0.001000, route bandwidth = 1250000000.000000
> Route between AS_2_host3 and AS_2_host3
>   Route size 1
>   Link __loopback__: latency = 0.000000, bandwidth = 10000000000.000000
>   Route latency = 0.000000, route bandwidth = 10000000000.000000
> Route between AS_2_host3 and AS_1_host1
>   Route size 4
>   Link AS_2_link3: latency = 0.000500, bandwidth = 1250000000.000000
>   Link AS_2_link4: latency = 0.000500, bandwidth = 1250000000.000000
>   Link backbone: latency = 0.000500, bandwidth = 1250000000.000000
>   Link AS_1_link: latency = 0.000500, bandwidth = 1250000000.000000
>   Route latency = 0.002000, route bandwidth = 1250000000.000000
> Route between AS_1_host1 and AS_2_host1
>   Route size 4
>   Link AS_1_link: latency = 0.000500, bandwidth = 1250000000.000000
>   Link backbone: latency = 0.000500, bandwidth = 1250000000.000000
>   Link AS_2_link4: latency = 0.000500, bandwidth = 1250000000.000000
>   Link AS_2_link1: latency = 0.000500, bandwidth = 1250000000.000000
>   Route latency = 0.002000, route bandwidth = 1250000000.000000
> Route between AS_1_host1 and AS_2_host2
>   Route size 4
>   Link AS_1_link: latency = 0.000500, bandwidth = 1250000000.000000
>   Link backbone: latency = 0.000500, bandwidth = 1250000000.000000
>   Link AS_2_link4: latency = 0.000500, bandwidth = 1250000000.000000
>   Link AS_2_link2: latency = 0.000500, bandwidth = 1250000000.000000
>   Route latency = 0.002000, route bandwidth = 1250000000.000000
> Route between AS_1_host1 and AS_2_host3
>   Route size 4
>   Link AS_1_link: latency = 0.000500, bandwidth = 1250000000.000000
>   Link backbone: latency = 0.000500, bandwidth = 1250000000.000000
>   Link AS_2_link4: latency = 0.000500, bandwidth = 1250000000.000000
>   Link AS_2_link3: latency = 0.000500, bandwidth = 1250000000.000000
>   Route latency = 0.002000, route bandwidth = 1250000000.000000
> Route between AS_1_host1 and AS_1_host1
>   Route size 1
>   Link __loopback__: latency = 0.000000, bandwidth = 10000000000.000000
>   Route latency = 0.000000, route bandwidth = 10000000000.000000
